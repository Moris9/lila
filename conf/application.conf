config_name = "production"
mongo {
  host = "127.0.0.1"
  port = 27017
  dbName = lichess
  connectionsPerHost = 100
  autoConnectRetry = true
  connectTimeout = 15 seconds
  threadsAllowedToBlockForConnectionMultiplier = 500
}
core {
  collection.cache = cache
}
bookmark {
  collection.bookmark = bookmark
}
analyse {
  collection.analysis = analysis
}
security {
  collection.security = security
}
firewall {
  enabled=true
  block_cookie=fEKHA4zI23ZrZrom
  collection.firewall = firewall
}
i18n {
  web_path.relative = "public/trans"
  file_path.relative = "conf"
  upstream.domain = "en.lichess.org"
  hide_calls.cookie.name="hide_i18n_calls"
  hide_calls.cookie.max_age=604800 # one week
  collection.translation = translation
}
notification {
  collection.notification = notification
}
monitor {
  timeout = 1 second
}
lobby {
  message.max = 30
  entry.max = 10
  message.lifetime = 30 seconds
  uid.timeout = 10 seconds
  collection {
    hook = hook
    entry = lobby_entry
    message = lobby_room
  }
}
game {
  cached.nb.ttl = 10 minutes
  paginator.max_per_page = 10
  collection.game = game2
}
round {
  message.lifetime = 30 seconds
  uid.timeout = 10 seconds
  hub.timeout = 2 minutes
  player.timeout = 1 minutes
  animation.delay = 200 ms
  moretime = 15 seconds
  collection {
    room = room
    watcher_room = watcher_room
  }
}
analyse {
  cached.nb.ttl = 10 minutes
}
forum {
  topic.max_per_page = 10
  post.max_per_page = 10
  recent.timeout = 1 hour
  collection {
    categ = f_categ
    topic = f_topic
    post = f_post
  }
}
message {
  thread.max_per_page = 30
  collection.thread = m_thread
}
setup {
  friend_config.memo.ttl = 1 day
}
site {
  uid.timeout = 10 seconds
}
user {
  paginator.max_per_page = 40
  elo_updater.floor = 800
  cached.nb.ttl = 10 minute
  collection {
    user = user2
    history = user_history
    config = config
  }
}
memo {
  hook.timeout = 5 seconds
  finisher_lock.timeout = 20 seconds
  username.timeout = 7 seconds
}
ai {
  use = stockfish 
  server = false
  client = true
  crafty {
    exec_path = "/usr/bin/crafty"
    book_path = "/usr/share/crafty"
    play {
      url = "http://188.165.194.171:9072/ai/crafty/play"
    }
  }
  stockfish {
    exec_path = "/usr/bin/stockfish"
    play {
      hash_size = 2048
      movetime = 400
      aggressiveness = 150 # 0 - 200
      cowardice = 50 # 0 - 200
      url = "http://188.165.194.171:9072/ai/stockfish/play"
    }
    analyse {
      hash_size = 2048
      movetime = 400
      url = "http://188.165.194.171:9072/ai/stockfish/analyse"
    }
  }
}
application {
  langs="en,fr,ru,de,tr,sr,lv,bs,da,es,ro,it,fi,uk,pt,pl,nl,vi,sv,cs,sk,hu,ca,sl,az,nn,eo,tp,el,fp,lt,no,et,hy,af,hi,ar,zh,gl,tk,hr,mk,id,ja,bg,th,fa,he,mr,mn,cy,gd,ga,sq,be,ka,sw,ps,is"
  secret="CiebwjgIM9cHQ;I?Xk:sfqDJ;BhIe:jsL?r=?IPF[saf>s^r0]?0grUq4>q?5mP^"
  global="lila.core.Global"
}
session {
  cookieName="lila"
  maxAge=31536000
}
wiki {
  collection.page = wiki
}

# trust proxy X-Forwarded-For header
trustxforwarded=true

dbplugin = disabled
evolutionplugin = disabled
ehcacheplugin = disabled

logger {
  root=INFO
  play=INFO
  application=INFO
}

akka {
  loglevel = INFO
  stdout-loglevel = INFO
  log-config-on-start = off
  event-handlers = ["lila.core.AkkaLogger"]
}

play.akka.actor {
  deployment {
    /actions {
      router = round-robin
      nr-of-instances = 32
    }
  }
  actions-dispatcher = {
    fork-join-executor {
        parallelism-factor = 64.0
        parallelism-max = 1024
    }
  }
  promises-dispatcher = {
    fork-join-executor {
        parallelism-factor = 64.0
        parallelism-max = 1024
    }
  }
  websockets-dispatcher = {
    fork-join-executor {
        parallelism-factor = 64.0
        parallelism-max = 1024
    }
  }
  default-dispatcher = {
    fork-join-executor {
        parallelism-factor = 64.0
        parallelism-max = 1024
    }
  }
}
