# App Public API
GET   /socket                           lila.controllers.AppC.socket
GET   /socket/:gameId/:color            lila.controllers.AppC.gameSocket(gameId: String, color: String)
GET   /abort/:fullId                    lila.controllers.AppC.abort(fullId: String)
GET   /resign/:fullId                   lila.controllers.AppC.resign(fullId: String)
GET   /resign-force/:fullId             lila.controllers.AppC.resignForce(fullId: String)
GET   /draw-claim/:fullId               lila.controllers.AppC.drawClaim(fullId: String)
GET   /draw-accept/:fullId              lila.controllers.AppC.drawAccept(fullId: String)
GET   /draw-offer/:fullId               lila.controllers.AppC.drawOffer(fullId: String)
GET   /draw-cancel/:fullId              lila.controllers.AppC.drawCancel(fullId: String)
GET   /draw-decline/:fullId             lila.controllers.AppC.drawDecline(fullId: String)
GET   /takeback-accept/:fullId          lila.controllers.AppC.takebackAccept(fullId: String)
GET   /takeback-offer/:fullId           lila.controllers.AppC.takebackOffer(fullId: String)
GET   /takeback-cancel/:fullId          lila.controllers.AppC.takebackCancel(fullId: String)
GET   /takeback-decline/:fullId         lila.controllers.AppC.takebackDecline(fullId: String)

GET   /ai                               lila.controllers.AiC.run

# App Private API
GET   /api/show/:fullId            lila.controllers.AppApiC.show(fullId: String)
POST  /api/start/:gameId           lila.controllers.AppApiC.start(gameId: String)
POST  /api/join/:fullId            lila.controllers.AppApiC.join(fullId: String)
POST  /api/reload-table/:gameId    lila.controllers.AppApiC.reloadTable(gameId: String)
POST  /api/rematch-accept/:gameId/:color/:newGameId  lila.controllers.AppApiC.rematchAccept(gameId: String, color: String, newGameId: String)
POST  /api/adjust/:username        lila.controllers.AppApiC.adjust(username: String)
GET   /api/activity/:gameId/:color lila.controllers.AppApiC.activity(gameId: String, color: String)
GET   /api/game-version/:gameId     lila.controllers.AppApiC.gameVersion(gameId: String)
GET   /api/game-info/:gameId        lila.controllers.AppApiC.gameInfo(gameId: String)

GET   /api/captcha/create           lila.controllers.CaptchaC.create
GET   /api/captcha/solve/:gameId    lila.controllers.CaptchaC.solve(gameId: String)

# Lobby Public API
GET   /lobby/cancel/:ownerId        lila.controllers.LobbyC.cancel(ownerId: String)
GET   /lobby/socket                 lila.controllers.LobbyC.socket

# Lobby Private API
POST  /api/lobby/join/:gameId/:color lila.controllers.LobbyC.join(gameId: String, color: String)
GET   /api/lobby/preload            lila.controllers.LobbyC.preload
POST  /api/lobby/create/:hookOwnerId lila.controllers.LobbyC.create(hookOwnerId: String)
POST   /api/lobby/chat-ban/:username lila.controllers.LobbyC.chatBan(username: String)

# Reporting API
GET   /nb-players                   lila.controllers.ReportC.nbPlayers
GET   /nb-playing                   lila.controllers.ReportC.nbPlaying
GET   /status                       lila.controllers.ReportC.status

# Useless, but play2 needs it
GET   /assets/*file                 controllers.Assets.at(path="/public", file)
