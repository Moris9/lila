# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# App XHR
GET   /ping                             controllers.AppXhrC.ping
GET   /sync/:gameId/:color/:version     controllers.AppXhrC.syncPublic(gameId: String, color: String, version: Int)
GET   /sync/:gameId/:color/:version/:fullId controllers.AppXhrC.sync(gameId: String, color: String, version: Int, fullId: String)
GET   /how-many-players-now             controllers.AppXhrC.nbPlayers
POST  /move/:fullId                     controllers.AppXhrC.move(fullId: String)
GET   /abort/:fullId                    controllers.AppXhrC.abort(fullId: String)
GET   /resign/:fullId                   controllers.AppXhrC.resign(fullId: String)
GET   /force-resign/:fullId             controllers.AppXhrC.forceResign(fullId: String)
GET   /claim-draw/:fullId               controllers.AppXhrC.claimDraw(fullId: String)
POST  /outoftime/:fullId                controllers.AppXhrC.outoftime(fullId: String)
POST  /draw-accept/:fullId              controllers.AppXhrC.drawAccept(fullId: String)
POST  /talk/:fullId                     controllers.AppXhrC.talk(fullId: String)

# App Private API
POST  /api/update-version/:gameId  controllers.AppApiC.updateVersion(gameId: String)
POST  /api/start/:gameId           controllers.AppApiC.start(gameId: String)
POST  /api/join/:fullId            controllers.AppApiC.join(fullId: String)
POST  /api/reload-table/:gameId    controllers.AppApiC.reloadTable(gameId: String)
POST  /api/rematch-accept/:gameId/:color/:newGameId  controllers.AppApiC.rematchAccept(gameId: String, color: String, newGameId: String)
POST  /api/alive/:gameId/:color    controllers.AppApiC.alive(gameId: String, color: String)
POST  /api/draw/:gameId/:color     controllers.AppApiC.draw(gameId: String, color: String)
GET   /api/activity/:gameId/:color controllers.AppApiC.activity(gameId: String, color: String)
GET   /api/possible-moves/:gameId/:color controllers.AppApiC.possibleMoves(gameId: String, color: String)
GET   /api/room/:gameId             controllers.AppApiC.room(gameId: String)
GET   /api/nb-players               controllers.AppXhrC.nbPlayers
POST  /api/outoftime/:fullId        controllers.AppXhrC.outoftime(fullId: String)

# Lobby XHR
GET   /lobby/sync/:hookId           controllers.LobbyXhrC.syncWithHook(hookId: String)
GET   /lobby/sync                   controllers.LobbyXhrC.syncWithoutHook

# Lobby Private API
POST  /api/lobby/join/:gameId/:color controllers.LobbyApiC.join(gameId: String, color: String)
GET   /api/lobby/preload/:hookId    controllers.LobbyXhrC.syncWithHook(hookId: String)
GET   /api/lobby/preload            controllers.LobbyXhrC.syncWithoutHook
POST  /api/lobby/create/:hookOwnerId controllers.LobbyApiC.create(hookOwnerId: String)
POST  /api/lobby/remove/:hookId     controllers.LobbyApiC.remove(hookId: String)
POST  /api/lobby/alive/:hookOwnerId controllers.LobbyApiC.alive(hookOwnerId: String)
POST  /api/lobby/message            controllers.LobbyApiC.message

# Useless, but play2 needs it
GET   /assets/*file                     controllers.Assets.at(path="/public", file)
