# Game
GET   /games                         controllers.Game.list

# Round
GET   /playerId                      controllers.Round.player(playerId: String)

# Setting
POST  /setting/color                 controllers.Setting.color
POST  /setting/sound                 controllers.Setting.sound

# Setup
GET   /setup/ai                      controllers.Setup.aiForm
POST  /setup/ai                      controllers.Setup.ai
GET   /setup/friend                  controllers.Setup.friendForm
POST  /setup/friend                  controllers.Setup.friend
GET   /setup/hook                    controllers.Setup.hookForm
POST  /setup/hook                    controllers.Setup.hook

# I18n
GET   /translation/contribute        controllers.I18n.contribute

# Authentication
GET   /login                         controllers.Auth.login
POST  /login                         controllers.Auth.authenticate
GET   /logout                        controllers.Auth.logout

# User
GET   /@/:username                   controllers.User.show(username: String)
GET   /signup                        controllers.User.signUp

# Wiki
GET   /wiki                          controllers.Wiki.home

# App Public API
GET   /socket                        controllers.App.socket
GET   /socket/:gameId/:color         controllers.App.gameSocket(gameId: String, color: String)
GET   /abort/:fullId                 controllers.App.abort(fullId: String)
GET   /resign/:fullId                controllers.App.resign(fullId: String)
GET   /resign-force/:fullId          controllers.App.resignForce(fullId: String)
GET   /draw-claim/:fullId            controllers.App.drawClaim(fullId: String)
GET   /draw-accept/:fullId           controllers.App.drawAccept(fullId: String)
GET   /draw-offer/:fullId            controllers.App.drawOffer(fullId: String)
GET   /draw-cancel/:fullId           controllers.App.drawCancel(fullId: String)
GET   /draw-decline/:fullId          controllers.App.drawDecline(fullId: String)
GET   /takeback-accept/:fullId       controllers.App.takebackAccept(fullId: String)
GET   /takeback-offer/:fullId        controllers.App.takebackOffer(fullId: String)
GET   /takeback-cancel/:fullId       controllers.App.takebackCancel(fullId: String)
GET   /takeback-decline/:fullId      controllers.App.takebackDecline(fullId: String)

GET   /ai                            controllers.Ai.run

# App Private API
GET   /api/show/:fullId              controllers.AppApi.show(fullId: String)
POST  /api/start/:gameId             controllers.AppApi.start(gameId: String)
POST  /api/join/:fullId              controllers.AppApi.join(fullId: String)
POST  /api/reload-table/:gameId      controllers.AppApi.reloadTable(gameId: String)
POST  /api/adjust/:username          controllers.AppApi.adjust(username: String)
GET   /api/activity/:gameId/:color   controllers.AppApi.activity(gameId: String, color: String)
GET   /api/game-version/:gameId      controllers.AppApi.gameVersion(gameId: String)
GET   /api/game-info/:gameId         controllers.AppApi.gameInfo(gameId: String)
POST  /api/rematch-accept/:gameId/:color/:newGameId controllers.AppApi.rematchAccept(gameId: String, color: String, newGameId: String)

GET   /api/captcha/create            controllers.Captcha.create
GET   /api/captcha/solve/:gameId     controllers.Captcha.solve(gameId: String)

# Lobby Public API
GET   /                              controllers.Lobby.home
GET   /lobby/cancel/:ownerId         controllers.Lobby.cancel(ownerId: String)
GET   /lobby/join/:hookId            controllers.Lobby.join(hookId: String)
GET   /lobby/socket                  controllers.Lobby.socket

# Lobby Private API
#POST  /api/lobby/join/:gameId/:color controllers.Lobby.join(gameId: String, color: String)
#GET   /api/lobby/preload             controllers.Lobby.preload
POST  /api/lobby/create/:hookOwnerId controllers.Lobby.create(hookOwnerId: String)
POST  /api/lobby/chat-ban/:username  controllers.Lobby.chatBan(username: String)

# Reporting API
GET   /nb-players                    controllers.Report.nbPlayers
GET   /nb-playing                    controllers.Report.nbPlaying
GET   /status                        controllers.Report.status

GET   /assets/*file                  controllers.Assets.at(path="/public", file)
