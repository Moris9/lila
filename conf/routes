#Site
GET   /socket                           controllers.Main.websocket

# Game
GET   /games                         controllers.Game.realtime
GET   /games/refresh/:ids                         controllers.Game.realtimeInner(ids: String)
GET   /games/all                         controllers.Game.all(page: Int ?= 1)
GET   /games/checkmate                         controllers.Game.checkmate(page: Int ?= 1)

# Round
GET   /$gameId<[\w\-]{8}>                            controllers.Round.watcher(gameId: String, color: String = "white")
GET   /$gameId<[\w\-]{8}>/$color<white|black>        controllers.Round.watcher(gameId: String, color: String)
GET   /$fullId<[\w\-]{12}>                           controllers.Round.player(fullId: String)
GET   /$gameId<[\w\-]{8}>/$color<white|black>/socket controllers.Round.websocketWatcher(gameId: String, color: String)
GET   /$fullId<[\w\-]{12}>/socket                    controllers.Round.websocketPlayer(fullId: String)
GET   /$fullId<[\w\-]{12}>/abort                     controllers.Round.abort(fullId: String)
GET   /$fullId<[\w\-]{12}>/resign                    controllers.Round.resign(fullId: String)
GET   /$fullId<[\w\-]{12}>/resign/force              controllers.Round.resignForce(fullId: String)
GET   /$fullId<[\w\-]{12}>/draw/claim                controllers.Round.drawClaim(fullId: String)
GET   /$fullId<[\w\-]{12}>/draw/accept               controllers.Round.drawAccept(fullId: String)
GET   /$fullId<[\w\-]{12}>/draw/offer                controllers.Round.drawOffer(fullId: String)
GET   /$fullId<[\w\-]{12}>/draw/cancel               controllers.Round.drawCancel(fullId: String)
GET   /$fullId<[\w\-]{12}>/draw/decline              controllers.Round.drawDecline(fullId: String)
GET   /$fullId<[\w\-]{12}>/rematch                   controllers.Round.rematch(fullId: String)
GET   /$fullId<[\w\-]{12}>/rematch/cancel            controllers.Round.rematchCancel(fullId: String)
GET   /$fullId<[\w\-]{12}>/rematch/decline           controllers.Round.rematchDecline(fullId: String)
GET   /$fullId<[\w\-]{12}>/takeback/accept           controllers.Round.takebackAccept(fullId: String)
GET   /$fullId<[\w\-]{12}>/takeback/offer            controllers.Round.takebackOffer(fullId: String)
GET   /$fullId<[\w\-]{12}>/takeback/cancel           controllers.Round.takebackCancel(fullId: String)
GET   /$fullId<[\w\-]{12}>/takeback/decline          controllers.Round.takebackDecline(fullId: String)
GET   /$gameId<[\w\-]{8}>/$color<white|black>/table  controllers.Round.tableWatcher(gameId: String, color: String)
GET   /$fullId<[\w\-]{12}>/table                     controllers.Round.tablePlayer(fullId: String)
GET   /$gameId<[\w\-]{8}>/players                    controllers.Round.players(gameId: String)

# Analyse
GET   /analyse/$gameId<[\w\-]{8}>       controllers.Analyse.replay(gameId: String, color: String = "white")
GET   /analyse/$gameId<[\w\-]{8}>/$color<white|black> controllers.Analyse.replay(gameId: String, color: String)
GET   /$gameId<[\w\-]{8}>/stats          controllers.Analyse.stats(gameId: String)

# Setting
POST  /setting/color                 controllers.Setting.color
POST  /setting/sound                 controllers.Setting.sound

# Setup
GET   /setup/ai                      controllers.Setup.aiForm
POST  /setup/ai                      controllers.Setup.ai
GET   /setup/friend                  controllers.Setup.friendForm
POST  /setup/friend                  controllers.Setup.friend
GET   /$fullId<[\w\-]{12}>/await     controllers.Setup.await(fullId: String)
GET   /$fullId<[\w\-]{12}>/cancel    controllers.Setup.cancel(fullId: String)
GET   /setup/hook                    controllers.Setup.hookForm
POST  /setup/hook                    controllers.Setup.hook

# I18n
GET   /translation/contribute        controllers.I18n.contribute

# Authentication
GET   /login                         controllers.Auth.login
POST  /login                         controllers.Auth.authenticate
GET   /logout                        controllers.Auth.logout

# User
GET   /@/:username/export            controllers.User.export(username: String)
GET   /@/:username/:filterName       controllers.User.showFilter(username: String, filterName: String, page: Int ?= 1)
GET   /@/:username                   controllers.User.show(username: String)
POST  /@/:username/engine            controllers.User.engine(username: String)
POST  /@/:username/mute              controllers.User.mute(username: String)
GET   /signup                        controllers.User.signUp
GET   /people                        controllers.User.list(page: Int ?= 1)
GET   /people/stats                  controllers.User.stats
GET   /people/autocomplete           controllers.User.autocomplete
GET   /people/online                 controllers.User.online
GET   /account/bio                     controllers.User.getBio
POST  /account/bio                     controllers.User.setBio
GET   /account/close                     controllers.User.close
POST  /account/closeConfirm                     controllers.User.closeConfirm

# Wiki
GET   /wiki                          controllers.Wiki.home

GET   /ai                            controllers.Ai.run

# App Private API
#POST  /api/start/:gameId             controllers.AppApi.start(gameId: String)
#POST  /api/join/$fullId<[\w\-]{12}>              controllers.AppApi.join(fullId: String)
#POST  /api/reload-table/:gameId      controllers.AppApi.reloadTable(gameId: String)
#POST  /api/adjust/:username          controllers.AppApi.adjust(username: String)
#GET   /api/activity/:gameId/:color   controllers.AppApi.activity(gameId: String, color: String)
#GET   /api/game-version/:gameId      controllers.AppApi.gameVersion(gameId: String)
#GET   /api/game-info/:gameId         controllers.AppApi.gameInfo(gameId: String)
#POST  /api/rematch-accept/:gameId/:color/:newGameId controllers.AppApi.rematchAccept(gameId: String, color: String, newGameId: String)
#
#GET   /api/captcha/create            controllers.Captcha.create
#GET   /api/captcha/solve/:gameId     controllers.Captcha.solve(gameId: String)

# Lobby Public API
GET   /                              controllers.Lobby.home
GET   /lobby/cancel/:ownerId         controllers.Lobby.cancel(ownerId: String)
GET   /lobby/join/:hookId            controllers.Lobby.join(hookId: String)
GET   /lobby/socket                  controllers.Lobby.socket

# Lobby Private API
#POST  /api/lobby/join/:gameId/:color controllers.Lobby.join(gameId: String, color: String)
#GET   /api/lobby/preload             controllers.Lobby.preload
#POST  /api/lobby/create/:hookOwnerId controllers.Lobby.create(hookOwnerId: String)
#POST  /api/lobby/chat-ban/:username  controllers.Lobby.chatBan(username: String)

GET   /assets/*file                  controllers.Assets.at(path="/public", file)

# Monitor
GET   /monitor                      controllers.Monitor.index
GET   /monitor/stream               controllers.Monitor.stream
GET   /nb-players                    controllers.Monitor.nbPlayers
GET   /nb-playing                    controllers.Monitor.nbPlaying
GET   /status                        controllers.Monitor.status
