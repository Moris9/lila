$mq-room-for-moves: $mq-x-small $mq-short;

$col1-player-clock-height: 50px;

.round__app {
  display: grid;

  grid-template-columns: auto min-content;
  grid-template-rows: $col1-player-clock-height auto $col1-player-clock-height;
  grid-template-areas:
  "user-top clock-top"
  "board    board"
  "user-bot clock-bot"
  "controls controls"
  "moves    moves";

  &__table { display: none; }

  @include breakpoint($mq-col2) {
    grid-template-columns: $board-width minmax(250px, 320px);
    grid-template-rows: repeat(10, auto);
    grid-template-areas:
    "board ."
    "board mat-top"
    "board clock-top"
    "board user-top"
    "board moves"
    "board controls"
    "board user-bot"
    "board clock-bot"
    "board mat-bot"
    "board .";
    grid-column-gap: $block-gap;
    &__table {
      display: block;
      grid-area: 4 / 2 / 8 / 3;
    }
    .rmoves { display: none; }
    @include breakpoint($mq-room-for-moves) {
      .rmoves { display: flex; }
    }
  }

  &__board {
    grid-area: board;
    @include breakpoint($mq-col2) {
      /* Align vertically when zoomed out */
      // display: flex;
      // flex-flow: column;
      // justify-content: center;
    }
    @include breakpoint($mq-portrait) {
      /* In portrait single column, make sure both clocks and the board fit in the viewport. If they don't, limit the board width */
      max-width: calc(100vh - #{$site-header-height} - #{$col1-player-clock-height * 2});
    }
  }
}
.rcontrols { grid-area: controls; }
.material-top { grid-area: mat-top; }
.material-bottom { grid-area: mat-bot; }
.ruser-top { grid-area: user-top; }
.ruser-bottom { grid-area: user-bot; }
.rclock-top { grid-area: clock-top; }
.rclock-bottom { grid-area: clock-bot; }
.rmoves { grid-area: moves; }
