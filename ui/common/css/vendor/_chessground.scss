$piece-image-path: "../../assets/img/chessground/piece";
$board-image-path: "../../assets/img/chessground/board";

@mixin board-img($name) {
  background-image: url("#{$board-image-path}/#{$name}");
}

.cg-board {
  position: absolute;
  width: 100%;
  height: 100%;
  user-select: none;
  line-height: 0;
  background-size: cover;
  cursor: pointer;
  & square {
    position: absolute;
    width: 12.5%;
    height: 12.5%;
    pointer-events: none;
    &.move-dest {
      background: radial-gradient(rgba(20, 85, 30, 0.5) 22%, #208530 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);
      pointer-events: auto;
    }
    &.premove-dest {
      background: radial-gradient(rgba(20, 30, 85, 0.5) 22%, #203085 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);
    }
    &.oc.move-dest {
      background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 85, 0, 0.3) 80%);
    }
    &.oc.premove-dest {
      background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 30, 85, 0.2) 80%);
    }
    &.move-dest:hover {
      background: rgba(20, 85, 30, 0.3);
    }
    &.premove-dest:hover {
      background: rgba(20, 30, 85, 0.2);
    }
    &.last-move {
      will-change: transform;
      background-color: rgba(155, 199, 0, 0.41);
    }
    &.selected {
      background-color: rgba(20, 85, 30, 0.5);
    }
    &.check {
      background: radial-gradient(ellipse at center, rgba(255, 0, 0, 1) 0%, rgba(231, 0, 0, 1) 25%, rgba(169, 0, 0, 0) 89%, rgba(158, 0, 0, 0) 100%);
    }
    &.current-premove {
      background-color: rgba(20, 30, 85, 0.5);
    }
  }
}
.cg-board-wrap {
  position: relative;
  /* prevents width issues with rank coords */
  overflow: hidden;
  & piece {
    position: absolute;
    top: 0;
    left: 0;
    width: 12.5%;
    height: 12.5%;
    background-size: cover;
    z-index: z('cg__piece');
    will-change: transform;
    pointer-events: none;
    &.dragging {
      cursor: move;
      z-index: z('cg__piece.dragging');
    }
    &.anim {
      z-index: z('cg__piece.anim');
    }
    &.fading {
      z-index: z('cg__piece.fading');
      opacity: 0.5;
    }
  }
  & square.move-dest:hover {
    background-color: rgba(20, 85, 30, 0.3);
  }
  & piece.ghost {
    opacity: 0.3;
  }
  & svg {
    overflow: hidden;
    position: relative;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: z('cg__svg');
    opacity: 0.6;
    & image {
      opacity: 0.5;
    }
  }
  & coords {
    position: absolute;
    display: flex;
    pointer-events: none;
    opacity: 0.8;
    font-size: 10px;
    &.ranks {
      right: -15px;
      top: 0;
      flex-flow: column-reverse;
      height: 100%;
      width: 12px;
      &.black {
        flex-flow: column;
      }
      & coord {
        transform: translateY(39%);
      }
    }
    &.files {
      bottom: -16px;
      left: 0;
      flex-flow: row;
      width: 100%;
      height: 16px;
      text-transform: uppercase;
      text-align: center;
      &.black {
        flex-flow: row-reverse;
      }
    }
    & coord {
      flex: 1 1 auto;
    }
  }
}

/*
 * Board
 */
.blue .cg-board-wrap {
  @include board-img("blue.svg");
}

$piece-files: (
'white': (
'pawn': 'wP',
'knight': 'wN',
'bishop': 'wB',
'rook': 'wR',
'queen': 'wQ',
'king': 'wK',
),
'black': (
'pawn': 'bP',
'knight': 'bN',
'bishop': 'bB',
'rook': 'bR',
'queen': 'bQ',
'king': 'bK',
)
);

$set: 'cburnett';
@each $color, $pieces in $piece-files {
  @each $name, $file in $pieces {
    .#{$set} piece.#{$name}.#{$color} {
      background-image: url("#{$piece-image-path}/#{$set}/#{$file}.svg");
    }
  }
}

/* inner coords */
.cg-board-wrap coords {
  color: #fff;
  text-shadow: 0 1px 2px #000;
}
.cg-board-wrap coords.files {
  bottom: 0px;
  text-align: left;
}
.cg-board-wrap coords.files coord {
  padding-left: 2px;
}
.cg-board-wrap coords.ranks {
  right: -4px;
  text-align: left;
}
.cg-board-wrap coords.ranks coord {
  transform: none;
}
.brown coord, .green coord, .blue coord {
  text-shadow: none;
}
.blue .orientation-white .files coords:nth-child(2n+1),
.blue .orientation-white .ranks coords:nth-child(2n),
.blue .orientation-black .files coords:nth-child(2n),
.blue .orientation-black .ranks coords:nth-child(2n+1) {
  color: #DEE3E6;
}
.blue .orientation-white .files coord:nth-child(2n),
.blue .orientation-white .ranks coord:nth-child(2n+1),
.blue .orientation-black .files coord:nth-child(2n+1),
.blue .orientation-black .ranks coord:nth-child(2n) {
  color: #788a94;
}
