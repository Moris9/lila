@mixin columns-with-gauge-col2($board-width, $gauge-width) {
  grid-template-columns: 1fr minmax(30vmin, $board-width) $gauge-width $block-gap minmax(200px, 300px) 1fr;
}
@mixin columns-with-gauge-col3($board-width, $gauge-width) {
  grid-template-columns: 1fr minmax(230px, 20vw) $block-gap minmax(30vmin, $board-width) $gauge-width $block-gap minmax(200px, 300px) 1fr;
}

.puzzle {
  grid-area: main;
  display: grid;

  &__side { grid-area: side; }
  &__board { grid-area: board; }
  &__gauge { grid-area: gauge; }
  &__tools { grid-area: tools; }
  &__controls { grid-area: controls; }
  &__history { grid-area: history; }

  $board-width: calc(100vh * var(--board-scale) - #{$puzzle-history-height} - 2 * #{$block-gap} - #{$site-header-height});

  @include columns-with-gauge-col2($board-width, 0);
  grid-template-rows: fit-content(0);
  grid-template-areas:
  '. board   gauge .    tools .'
  '. history .     .    controls .'
  '. side    side  side side .';
  grid-row-gap: $block-gap;

  @include breakpoint($mq-x-large) {
    grid-template-areas:
    '. side    . board   gauge . tools .'
    '. .       . history .     . controls .';
    @include columns-with-gauge-col3($board-width, 0);
    &.with_gauge {
      @include columns-with-gauge-col3($board-width, 1rem);
    }
    &__tools {
      max-height: $board-width;
    }
  }

  &__side {
    display: grid;
    grid-template-areas:
    'metas user';
    @include breakpoint($mq-x-large) {
      grid-template-areas:
      'metas'
      'user';
      justify-self: end;
      max-width: 350px;
    }
    grid-gap: $block-gap;
    &__metas { grid-area: metas; }
    &__user { grid-area: user; }
  }
}
