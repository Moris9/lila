$mq-col2: ($mq-medium, $mq-landscape);
$mq-col3: $mq-x-large;

@mixin columns-with-gauge-col2($board-width, $gauge-width) {
  grid-template-columns: 1fr $board-width $gauge-width $block-gap minmax(200px, 400px) 1fr;
}
@mixin columns-with-gauge-col3($board-width, $gauge-width) {
  grid-template-columns: 1fr minmax(230px, 20vw) $block-gap $board-width $gauge-width $block-gap minmax(200px, 400px) 1fr;
}

.puzzle {
  grid-area: main;
  display: grid;

  &__side { grid-area: side; }
  &__board { grid-area: board; }
  &__tools { grid-area: tools; }
  &__controls { grid-area: controls; }
  &__history { grid-area: history; }
  & .eval-gauge { grid-area: gauge; }

  $board-min-width: calc(70vmin * var(--board-scale));
  $board-max-width: calc(100vh * var(--board-scale) - #{$puzzle-history-height} - 2 * #{$block-gap} - #{$site-header-height});
  $board-width: minmax($board-min-width, $board-max-width);

  grid-template-areas:
  'board'
  'controls'
  'tools'
  'history'
  'side';
  grid-row-gap: $block-gap;

  &__moves { display: none; }

  &__board {
    /* Make sure board fits in the viewport. */
    max-width: calc(100vh - #{$puzzle-history-height} - 2 * #{$block-gap} - #{$site-header-height});
  }
  @include breakpoint($mq-col2) {
    @include columns-with-gauge-col2($board-width, 0);
    &.gauge-on {
      @include columns-with-gauge-col2($board-width, 1rem);
    }
    grid-template-rows: fit-content(0);
    grid-template-areas:
    '. board   gauge .    tools    .'
    '. history .     .    controls .'
    '. side    side  side side     .';
    grid-row-gap: $block-gap;
    &__moves { display: block; }
  }

  @include breakpoint($mq-col3) {
    grid-template-areas:
    '. side    . board   gauge . tools    .'
    '. .       . history .     . controls .';
    @include columns-with-gauge-col3($board-width, 0);
    &.gauge-on {
      @include columns-with-gauge-col3($board-width, 1rem);
    }
    &__tools {
      // max-height: $board-width;
    }
  }

  &__side {
    display: grid;
    grid-template-areas:
    'metas'
    'user';
    grid-gap: $block-gap;
    @include breakpoint($mq-x-small) {
      grid-template-columns: 1fr 1fr;
      grid-template-areas:
      'metas user';
    }
    @include breakpoint($mq-x-large) {
      grid-template-columns: 1fr;
      grid-template-rows: min-content;
      grid-template-areas:
      'metas'
      'user';
      justify-self: end;
      min-width: 250px;
      max-width: 350px;
    }
    &__metas { grid-area: metas; }
    &__user { grid-area: user; }
  }
}
